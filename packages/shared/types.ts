export enum DatabaseType {
    CHEMICAL = 'CHEMICAL',
    GENE = 'GENE',
    GROWTH_FACTOR = 'GROWTH_FACTOR',
    PATHWAY = 'PATHWAY',
    DEFINITION = 'DEFINITION',
    PROTOCOL = 'PROTOCOL',
    CELL_TYPE = 'CELL_TYPE',
    ANIMAL_MODEL = 'ANIMAL_MODEL',
    GENETIC_MODIFICATION = 'GENETIC_MODIFICATION',
    TISSUE = 'TISSUE',
    ORGANISM = 'ORGANISM',
}

export interface Project {
    id: string;
    name: string;
    description?: string;
    status: 'active' | 'archived' | 'future';
    startDate?: string | null;
    lastActivity?: string | null;
    createdAt: string;
}

export interface Experiment {
    id: string;
    projectId: string;
    name: string;
    description?: string;
    createdAt: string;
}

export interface Note {
    id: string;
    experimentId?: string;
    title: string;
    content: string;
    date?: string;
    type: string;
    createdAt: string;
}

export interface DailyNote {
    id: string;
    date: string;
    content: string;
    createdAt: string;
}

export interface PDF {
    id: string;
    filePath: string;
    title: string;
    uploadedAt: string;
}

export interface Highlight {
    id: string;
    pdfId: string;
    page: number;
    text: string;
    coords?: string;
    createdAt: string;
}

export interface DatabaseEntry {
    id: string;
    type: DatabaseType;
    name: string;
    description?: string;
    properties?: Record<string, any>;
    createdAt: string;
    metadata?: {
        molecularWeight?: number;
        concentration?: string;
        storage?: string;
        supplier?: string;
        catalogNumber?: string;
        purity?: string;
        sequence?: string;
        organism?: string;
        function?: string;
        protocol?: string;
        equipment?: string[];
        duration?: string;
        temperature?: string;
        pH?: string;
        // Model-specific fields
        modelType?: 'cell' | 'mouse' | 'rat' | 'monkey' | 'human' | 'other';
        species?: string;
        strain?: string;
        geneticModification?: string;
        sex?: 'male' | 'female' | 'unknown';
        age?: string;
        anatomicalLocation?: string; // e.g., 'fat pad', 'kidney capsule', etc.
        condition?: string; // e.g., 'live', 'anesthetized', etc.
        notes?: string;
    };
    relatedResearch?: string;
}

export interface Link {
    id: string;
    sourceType: string;
    sourceId: string;
    targetType: string;
    targetId: string;
    createdAt: string;
}

export type EventType = 'meeting' | 'deadline' | 'journal' | 'experiment' | 'note';

export interface CalendarEvent {
    id: string;
    type: EventType;
    title: string;
    description?: string;
    start: string; // ISO date string
    end?: string; // ISO date string
    allDay?: boolean;
    relatedId?: string; // e.g., noteId, experimentId, projectId
    createdAt: string;
    metadata?: Record<string, any>;
}

export interface LiteratureNote {
    id: string;
    title: string;
    authors?: string;
    year?: string;
    journal?: string;
    doi?: string;
    abstract?: string;
    tags?: string;
    citation?: string;
    synonyms?: string; // comma-separated
    userNote?: string;
    createdAt: string;
    updatedAt: string;
    relatedEntries: string[]; // or DatabaseEntry[] if populated
}

export interface Task {
    id: string;
    title: string;
    description?: string;
    status: 'todo' | 'in_progress' | 'done' | 'overdue' | 'cancelled';
    priority: 'high' | 'medium' | 'low';
    deadline?: string | null;
    createdAt: string;
    completedAt?: string | null;
    autoGenerated: boolean;
    projectId: string;
    experimentId?: string | null;
} 